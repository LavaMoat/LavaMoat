name: CI
on:
  push:
    branches:
      - main # limit to main, because pushes to pull-requested branches are triggered below
  pull_request:
    # any pull request

permissions:
  contents: read

env:
  FORCE_COLOR: '1'

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - node-version: 16.x
            test-workspaces: >-
              --workspace=packages/aa
              --workspace=packages/allow-scripts
              --workspace=packages/preinstall-always-fail
              --workspace=packages/yarn-plugin-allow-scripts
          - node-version: 18.x
            test-workspaces: --workspaces
          - node-version: 20.x
            test-workspaces: --workspaces
          - node-version: 22.x
            test-workspaces: --workspaces
    steps:
      - name: Checkout (PR)
        if: github.event_name == 'pull_request'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # fetch-depth: 0 looks like it has a perf impact, so let's not do that if we don't have to.
      # see https://github.com/actions/checkout/blob/main/README.md#usage
      - name: Checkout (Push)
        if: github.event_name != 'pull_request'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # needed for dirty check
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Set npm version
        run: |
          corepack enable
          npm --version
      - name: Install Dependencies
        uses: bahmutov/npm-install@6bbff949458c1dd99b20e185cee8c4d6fcf1212a # v1.10.9
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Test Workspaces
        run: |
          npm run --if-present ${{ matrix.test-workspaces }} build
          npm run build:types
          npm run --if-present ${{ matrix.test-workspaces }} test:prep
          npm run --if-present ${{ matrix.test-workspaces }} test
      - name: Dirty Check
        run: node ./scripts/dirty-check.js

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install Dependencies
        uses: bahmutov/npm-install@6bbff949458c1dd99b20e185cee8c4d6fcf1212a # v1.10.9
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      # the same thing could be accomplished via `npm lint` but this is helpful for organizing job output
      - name: Lint Sources
        run: npm run lint:eslint
      - name: Lint Dependencies
        run: npm run lint:deps
      - name: Lint Lockfile
        run: npm run lint:lockfile
