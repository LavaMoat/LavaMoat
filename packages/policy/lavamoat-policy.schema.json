{
  "$defs": {
    "builtinName": {
      "description": "Name of a builtin module or property thereof; dot notation allowed",
      "id": "builtinName",
      "type": "string"
    },
    "builtinPolicy": {
      "description": "`true` to allow access and `false` to deny access",
      "id": "builtinPolicy",
      "type": "boolean"
    },
    "canonicalName": {
      "anyOf": [
        {
          "pattern": "^(?:(?:@[a-z0-9-~][a-z0-9-._~]*\\/)?[a-z0-9-~][a-z0-9-._~]*)(?:>(?:@[a-z0-9-~][a-z0-9-._~]*\\/)?[a-z0-9-~][a-z0-9-._~]*)*$",
          "type": "string"
        },
        {
          "const": "$root$"
        }
      ],
      "description": "Canonical name of a package representing the shortest path via the dependency tree (or `$root$` for a trusted root package)",
      "id": "canonicalName"
    },
    "globalPolicy": {
      "additionalProperties": {
        "$ref": "#/$defs/globalPolicyValue"
      },
      "description": "Globals (including properties using dot notation) accessible to the resource; `true` to allow and `false` to deny",
      "id": "globalPolicy",
      "propertyNames": {
        "$ref": "#/$defs/globalProperty"
      },
      "type": "object"
    },
    "globalPolicyValue": {
      "anyOf": [
        {
          "description": "`true` for read capability; `false` for none",
          "type": "boolean"
        },
        {
          "const": "write",
          "description": "write capability"
        },
        {
          "const": "redefine",
          "description": "redefine capability"
        }
      ],
      "description": "Global policy value",
      "id": "globalPolicyValue"
    },
    "globalProperty": {
      "description": "Global property key or property thereof; dot notation allowed",
      "id": "globalProperty",
      "type": "string"
    },
    "nativePolicy": {
      "description": "`true` to allow loading of native modules; `false` for none",
      "id": "nativePolicy",
      "type": "boolean"
    },
    "packagePolicy": {
      "description": "Additional external packages (in their entirety) accessible to the module; `true` to allow and `false` to deny",
      "id": "packagePolicy",
      "type": "boolean"
    },
    "resourcePolicy": {
      "additionalProperties": false,
      "description": "Policy for a given resource",
      "id": "resourcePolicy",
      "properties": {
        "builtin": {
          "additionalProperties": {
            "$ref": "#/$defs/builtinPolicy"
          },
          "description": "Mapping of builtin module name to builtin policy value",
          "propertyNames": {
            "$ref": "#/$defs/builtinName"
          },
          "type": "object"
        },
        "globals": {
          "$ref": "#/$defs/globalPolicy"
        },
        "native": {
          "$ref": "#/$defs/nativePolicy"
        },
        "packages": {
          "additionalProperties": {
            "$ref": "#/$defs/packagePolicy"
          },
          "description": "Mapping of canonical package name to package policy value",
          "propertyNames": {
            "$ref": "#/$defs/canonicalName"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "resources": {
      "additionalProperties": {
        "$ref": "#/$defs/resourcePolicy"
      },
      "description": "Mapping of canonical package name to resource policy value",
      "id": "resources",
      "propertyNames": {
        "$ref": "#/$defs/canonicalName"
      },
      "type": "object"
    },
    "root": {
      "additionalProperties": false,
      "description": "Root policy configuration",
      "id": "root",
      "properties": {
        "usePolicy": {
          "$ref": "#/$defs/canonicalName",
          "description": "Reference to resource policy to use for the application root"
        }
      },
      "type": "object"
    }
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "description": "LavaMoat policy",
  "properties": {
    "resources": {
      "$ref": "#/$defs/resources"
    },
    "root": {
      "$ref": "#/$defs/root"
    }
  },
  "required": ["resources"],
  "type": "object"
}
